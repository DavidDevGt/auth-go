{
  "info": {
    "name": "Go Auth API Senior QA Suite",
    "_postman_id": "{{randomUUID}}",
    "description": "Colección de pruebas exhaustivas para la API de autenticación Go, siguiendo mejores prácticas QA. Incluye flujos positivos, negativos y validaciones de seguridad.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "base_url", "value": "http://localhost:8080" },
    { "key": "username", "value": "qa.user.{{timestamp}}" },
    { "key": "email", "value": "qa.user.{{timestamp}}@mail.com" },
    { "key": "password", "value": "QA!passw0rd@2025" },
    { "key": "wrong_password", "value": "WrongPass!2025" },
    { "key": "device_id", "value": "device-qa-{{timestamp}}" },
    { "key": "access_token", "value": "" },
    { "key": "refresh_token", "value": "" },
    { "key": "logout_refresh_token", "value": "" },
    { "key": "revoke_refresh_token", "value": "" },
    { "key": "invalid_refresh_token", "value": "invalidtoken123" },
    { "key": "invalid_access_token", "value": "Bearer invalidtoken123" }
  ],
  "item": [
    {
      "name": "Flujo Completo QA",
      "description": "Flujo principal y casos QA para autenticación.",
      "item": [
        {
          "name": "Registro exitoso",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/register", "host": ["{{base_url}}"], "path": ["api", "register"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"{{username}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Registro exitoso o usuario ya existe\", function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([201, 400, 409]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login exitoso",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/login", "host": ["{{base_url}}"], "path": ["api", "login"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"device_id\": \"{{device_id}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login exitoso\", function () {",
                  "  pm.expect(pm.response.code).to.eql(200);",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('access_token');",
                  "  pm.expect(json).to.have.property('refresh_token');",
                  "  pm.environment.set('access_token', json.access_token);",
                  "  pm.environment.set('refresh_token', json.refresh_token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login con password incorrecto",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/login", "host": ["{{base_url}}"], "path": ["api", "login"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{wrong_password}}\",\n  \"device_id\": \"{{device_id}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login falla con password incorrecto\", function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([401, 400]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh exitoso",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/refresh", "host": ["{{base_url}}"], "path": ["api", "refresh"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\",\n  \"device_id\": \"{{device_id}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Refresh exitoso\", function () {",
                  "  pm.expect(pm.response.code).to.eql(200);",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('access_token');",
                  "  pm.expect(json).to.have.property('refresh_token');",
                  "  pm.environment.set('access_token', json.access_token);",
                  "  pm.environment.set('refresh_token', json.refresh_token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh con token inválido",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/refresh", "host": ["{{base_url}}"], "path": ["api", "refresh"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{invalid_refresh_token}}\",\n  \"device_id\": \"{{device_id}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Refresh falla con token inválido\", function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([401, 400]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout exitoso",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{base_url}}/api/logout", "host": ["{{base_url}}"], "path": ["api", "logout"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Logout exitoso\", function () {",
                  "  pm.expect(pm.response.code).to.eql(200);",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('message');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Acceso protegido exitoso",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": { "raw": "{{base_url}}/api/protected", "host": ["{{base_url}}"], "path": ["api", "protected"] }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Acceso protegido exitoso\", function () {",
                  "  pm.expect(pm.response.code).to.eql(200);",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('user_id');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Acceso protegido sin token",
          "request": {
            "method": "GET",
            "header": [],
            "url": { "raw": "{{base_url}}/api/protected", "host": ["{{base_url}}"], "path": ["api", "protected"] }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Acceso protegido falla sin token\", function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([401, 403]);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}